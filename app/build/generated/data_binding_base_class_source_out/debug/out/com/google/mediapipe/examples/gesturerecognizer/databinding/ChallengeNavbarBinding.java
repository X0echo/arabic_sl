// Generated by view binder compiler. Do not edit!
package com.google.mediapipe.examples.gesturerecognizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mediapipe.examples.gesturerecognizer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChallengeNavbarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSkipChallenge;

  @NonNull
  public final LinearLayout challengeNavbar;

  @NonNull
  public final RecyclerView challengeRecycler;

  private ChallengeNavbarBinding(@NonNull LinearLayout rootView, @NonNull Button btnSkipChallenge,
      @NonNull LinearLayout challengeNavbar, @NonNull RecyclerView challengeRecycler) {
    this.rootView = rootView;
    this.btnSkipChallenge = btnSkipChallenge;
    this.challengeNavbar = challengeNavbar;
    this.challengeRecycler = challengeRecycler;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChallengeNavbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChallengeNavbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.challenge_navbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChallengeNavbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSkipChallenge;
      Button btnSkipChallenge = ViewBindings.findChildViewById(rootView, id);
      if (btnSkipChallenge == null) {
        break missingId;
      }

      LinearLayout challengeNavbar = (LinearLayout) rootView;

      id = R.id.challengeRecycler;
      RecyclerView challengeRecycler = ViewBindings.findChildViewById(rootView, id);
      if (challengeRecycler == null) {
        break missingId;
      }

      return new ChallengeNavbarBinding((LinearLayout) rootView, btnSkipChallenge, challengeNavbar,
          challengeRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
